@using CHHC.Web.Models
@model UserTrainings
@{
    ViewBag.Title = "User '" + @Model.UserName + "' > Trainings";
}

<div class="container page page-title-background mychhc">    
    <h2 class="page-title">@Html.Raw(CHHC.Web.ViewHelper.PrepareTitle(ViewBag.Title))</h2>
    <div class="container page-content">
        <div class="row">
            <div class="col-md-12">
                @Html.Partial("_MessagePartial")
                @using (Html.BeginForm())
                {
                    @Html.AntiForgeryToken()
                    @Html.ValidationSummary()
                    @Html.HiddenFor(m => m.UserId)
                    @Html.HiddenFor(m => m.UserName)
                    @Html.HiddenFor(m => m.ReturnControllerName)

                    <table class="table table-striped table-bordered table-condensed">
                    <thead>
                        <tr>
                            <th></th>
                            <th>Training</th>
                            <th>Completed</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var training in Model.AllTrainings)
                        {
                            bool connected = Model.TrainingIds.Contains(training.Id);
                            <tr>
                                <td class="text-center">
                                    <input id="trainingIds" name="trainingIds" type="checkbox" value="@training.Id" @(connected ? " checked=checked" : string.Empty) onclick="@(training.IsCompleted ? "return false;" : string.Empty)" />
                                </td>
                                <td>
                                    @training.Title
                                </td>
                                <td>
                                    @if (connected)
                                    {
                                        if (training.IsCompleted)
                                        {
                                            if (training.CompletedDate.HasValue)
                                            {
                                                <text>completed at @training.CompletedDate.Value.ToString("d")</text>
                                            }
                                            else
                                            {
                                                <text>completed</text>
                                            }
                                            @Html.ActionLink("Open Completion Form", "OpenCompletionForm", new { TrainingId = training.Id, UserId = Model.UserId }, new { @class = "btn btn-primary btn-xs" })
                                        }
                                        else
                                        {
                                            <text>not completed</text>
                                        }
                                    }
                                    else
                                    {
                                        <text>N/A</text>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                    </table>
                    <br />

                    <button type="submit" class="btn btn-primary">Save</button>
                    @Html.ActionLink("Back", "Users", Model.ReturnControllerName, new { @class="btn btn-default" })
                }
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}